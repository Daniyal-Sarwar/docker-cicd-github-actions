name: Docker CI/CD Pipeline

# Trigger the workflow on push to main branch and pull requests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Environment variables available to all jobs
env:
  DOCKER_IMAGE_NAME: docker-cicd-demo
  DOCKER_REGISTRY: docker.io

jobs:
  # Job 1: Build and Test
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Step 2: Set up Node.js environment for testing
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm install
    
    # Step 4: Run application tests
    - name: Run tests
      run: |
        # Start the application in background
        npm start &
        APP_PID=$!
        
        # Wait for application to start
        sleep 5
        
        # Run tests
        npm test
        
        # Clean up
        kill $APP_PID
    
    # Step 5: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # Step 6: Build Docker image for testing
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ${{ env.DOCKER_IMAGE_NAME }}:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    # Step 7: Test Docker image
    - name: Test Docker image
      run: |
        # Run container in background
        docker run -d -p 3000:3000 --name test-container ${{ env.DOCKER_IMAGE_NAME }}:test
        
        # Wait for container to start
        sleep 10
        
        # Test the container
        curl -f http://localhost:3000/health || exit 1
        
        # Clean up
        docker stop test-container
        docker rm test-container

  # Job 2: Build and Push to Docker Hub (only on main branch)
  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    # Step 1: Checkout repository
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # Step 3: Login to Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # Step 4: Extract metadata for tags and labels
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    # Step 5: Build and push Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
