name: Docker CI/CD Pipeline

on:
  workflow_dispatch:       # allow manual runs
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  DOCKER_IMAGE_NAME: docker-cicd-demo
  DOCKER_REGISTRY: docker.io

jobs:
  # Job 1: Build and Test (using classic docker build)
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: |
          npm start & APP_PID=$!
          sleep 5
          npm test
          kill $APP_PID

      - name: Build Docker image (classic)
        run: |
          docker build \
            -t ${{ env.DOCKER_IMAGE_NAME }}:test \
            .

      - name: Test Docker image
        run: |
          # Clean up any previous test-container
          docker ps -q --filter "name=test-container" | grep -q . && docker rm -f test-container || true
          # Run the test container
          docker run --rm -d -p 3000:3000 --name test-container \
            ${{ env.DOCKER_IMAGE_NAME }}:test
          sleep 10
          curl -f http://localhost:3000/health

          # (Container will auto-remove due to --rm)

  # Job 2: Build and Push to Docker Hub (only on main/master)
  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
